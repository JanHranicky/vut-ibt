readit: 
set_loop_time: 
__infer_globals_initializer_state_mutex: 
get_queued_capture_samples: 
frames_to_time: 
xrun_sync: 
__infer_globals_initializer_quit: 
buf_avail: 
get_active: 
__infer_globals_initializer_arg_default_xrun: 
timediff$link1: 
setparams_set: 
openctl: 
add_oss_mixers: 
signal_handler_state: 
__infer_globals_initializer_my_argv: 
control_id_match: 
pcm_open_lock: 
timediff: 
control_done: 
control_init: 
control_init2: 
my_exit: 
xrun_profile0: 
parse_config: 
xrun_stats0: 
xrun_stats: 
__infer_globals_initializer_loopbacks_count: 
__infer_globals_initializer_threads_count: 
buf_add: 
control_event: 
showlatency: 
help: 
pcmjob_pollfds_handle: 
pcmjob_pollfds_init: 
xrun_profile: 
main: 
update_pitch: 
lhandle_start: 
signal_handler: 
get_whole_latency: 
setparams_stream: 
__infer_globals_initializer_my_argc: 
__infer_globals_initializer_workarounds: 
remove_samples: 
__infer_globals_initializer_sync_types: 
thread_job: 
set_notify: 
closeit: 
parse_config_file: 
send_to_all: 
thread_job1: 
get_channels: 
buf_remove: 
get_rate: 
pcm_open_init_mutex: 
control_init1: 
pcmjob_done: 
writeit: 
suspend: 
create_loopback_handle: 
__infer_globals_initializer_loopbacks: 
create_loopback: 
add_mixers: 
ctl_event_check: 
__infer_globals_initializer_use_syslog: 
pcmjob_state: {__variable_initialization, show_handle, snd_output_printf, snd_pcm_access_name, snd_pcm_format_name}
pcmjob_stop: 
get_queued_playback_samples: 
signal_handler_ignore: 
pcmjob_init: 
buf_add_src: 
get_format: 
__infer_globals_initializer_src_types: 
freeit: 
__infer_globals_initializer_arg_default_wake: 
pcm_open_unlock: 
xrun: 
time_to_frames: 
oss_set: 
openit: 
pcmjob_start: 
init_mixer_control: 
id_str: 
control_parse_id: 
setparams_bufsize: 
freeloop: 
control_event1: 
handle_ctl_events: 
copy_value: 
enable_syslog: 
fix_format: 
getcurtimestamp: 
show_handle: 
__infer_globals_initializer_pcm_open_mutex_once: 
setscheduler: 
init_handle: 
set_rate_shift: 
setparams: 
__infer_globals_initializer_verbose: 
__infer_globals_initializer_daemonize: 
add_loop: 
openctl_elem: 
